{"ast":null,"code":"var _jsxFileName = \"/Users/ambermanley/Documents/course_work/curriculum/deckbuilder/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"; // import axios from \"axios\";\n\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\nimport { fetchCards } from \"./api\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({\n    id,\n    name\n  }) => {\n    const nextDeck = [...deck]; // make a duplicate first\n\n    const index = nextDeck.findIndex(card => card.id === id); // index will be -1 if it is not found\n\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({\n    id\n  }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex(card => card.id === id);\n\n    if (index === -1) {\n      // don't do anything if we're trying to remove a card not in the deck\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      // remove the card altogether\n      nextDeck.splice(index, 1);\n    } else {\n      // decrement the count\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    setResults: setResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    results: results,\n    addCardToDeck: addCardToDeck,\n    removeCardFromDeck: removeCardFromDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeckList, {\n    deck: deck,\n    addCardToDeck: addCardToDeck,\n    removeCardFromDeck: removeCardFromDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ambermanley/Documents/course_work/curriculum/deckbuilder/src/index.js"],"names":["React","useState","ReactDOM","DeckList","SearchBar","SearchResults","fetchCards","App","results","setResults","deck","setDeck","addCardToDeck","id","name","nextDeck","index","findIndex","card","count","push","removeCardFromDeck","splice","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,aAAP,C,CACA;;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,cAAnD;AAEA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,aAAa,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AACtC,UAAMC,QAAQ,GAAG,CAAC,GAAGL,IAAJ,CAAjB,CADsC,CACV;;AAC5B,UAAMM,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAzC,CAAd,CAFsC,CAItC;;AACA,QAAIG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,IAAyB,CAAzB;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACK,IAAT,CAAc;AACZP,QAAAA,EADY;AAEZC,QAAAA,IAFY;AAGZK,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD;;AAEDR,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAhBD;;AAkBA,QAAMM,kBAAkB,GAAG,CAAC;AAAER,IAAAA;AAAF,GAAD,KAAY;AACrC,UAAME,QAAQ,GAAG,CAAC,GAAGL,IAAJ,CAAjB;AACA,UAAMM,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAzC,CAAd;;AAEA,QAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACA;AACD;;AAED,QAAID,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,KAA0B,CAA9B,EAAiC;AAC/B;AACAJ,MAAAA,QAAQ,CAACO,MAAT,CAAgBN,KAAhB,EAAuB,CAAvB;AACD,KAHD,MAGO;AACL;AACAD,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,IAAyB,CAAzB;AACD;;AAEDR,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAEN,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAGE,IAAA,kBAAkB,EAAES,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEX,IADR;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,kBAAkB,EAAES,kBAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD,CAzDD;;AA2DAnB,QAAQ,CAACqB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n// import axios from \"axios\";\n\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\n\nimport { fetchCards } from \"./api\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({ id, name }) => {\n    const nextDeck = [...deck]; // make a duplicate first\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    // index will be -1 if it is not found\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1,\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({ id }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    if (index === -1) {\n      // don't do anything if we're trying to remove a card not in the deck\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      // remove the card altogether\n      nextDeck.splice(index, 1);\n    } else {\n      // decrement the count\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return (\n    <div id=\"app\">\n      <SearchBar setResults={setResults} />\n      <SearchResults\n        results={results}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n      <DeckList\n        deck={deck}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}